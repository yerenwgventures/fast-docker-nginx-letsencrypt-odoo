version: '2'
services:
  db:
    image: postgres:13
    user: root
    environment:
      - POSTGRES_PASSWORD=odoo
      - POSTGRES_USER=odoo
      - POSTGRES_DB=postgres
    restart: always             # run as a service
    volumes:
        - ./postgresql:/var/lib/postgresql/data

  web:
    restart: always
    image: odoo:14
    user: root
    depends_on:
      - db
    ports:
      - "10014:8069"
      - "10019:8069" # bare
      - "20014:8072" # live chat
      - "20019:8072" # live chat
    tty: true
    command: --
#    command: odoo scaffold /mnt/extra-addons/custom_module
    environment:
      - HOST=db
      - USER=odoo
      - PASSWORD=odoo
      - VIRTUAL_HOST=odoo, odoochat
      - VIRTUAL_NETWORK=nginx-proxy
      - VIRTUAL_PORT=8069, 8072
      - LETSENCRYPT_HOST=erps.ltd
      - LETSENCRYPT_EMAIL=mytalent.me@gmail.com
    volumes:
      #- /etc/timezone:/etc/timezone:ro
      #- /etc/localtime:/etc/localtime:ro
      # - ./entrypoint.sh:/entrypoint.sh   # if you want to install additional Python packages, uncomment this line!
      - ./addons:/mnt/extra-addons
      - ./odoo_pragtech_saas_script_software_saaskit:/mnt/odoo_pragtech_saas_script_software_saaskit      
      - ./etc:/etc/odoo
    restart: always             # run as a service
    
  mynginx:
    restart: always
    image: nginx
    container_name: mynginx
    ports:
      - "82:80"
      - "445:443"
    volumes:
      - "/etc/nginx/conf.d"
      - "/etc/nginx/vhost.d"
      - "/usr/share/nginx/html"
      - "./volumes/proxy/certs:/etc/nginx/certs:ro"

  mynginx-gen:
    restart: always
    image: jwilder/docker-gen
    container_name: mynginx-gen
    volumes:
      - "/var/run/docker.sock:/tmp/docker.sock:ro"
      - "./volumes/proxy/templates/nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl:ro"
    volumes_from:
      - mynginx
    entrypoint: /usr/local/bin/docker-gen -notify-sighup nginx -watch -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf

  letsencrypt-nginx-proxy-companion:
    restart: always
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: letsencrypt-nginx-proxy-companion
    volumes_from:
      - mynginx
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./volumes/proxy/certs:/etc/nginx/certs:rw"
    environment:
      - NGINX_DOCKER_GEN_CONTAINER=mynginx-gen
